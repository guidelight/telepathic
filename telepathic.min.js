!function(r,t,e){"use strict";var n=t.module("guidelight.telepathic",["ngRoute"]);n.provider("telepathic",["$routeProvider","$locationProvider",function(r,t){var n=!1,i="",o={},a=function(r,t){if(!r||!t)throw Error("can't trim an empty string");for(;"/"===r[0];)r=r.slice(1);for(;"/"===r.slice(-1);)r=r.slice(0,r.length-1);return r},u=function(r){if(!Array.isArray(r))throw Error("makePath only accepts arrays");for(var t="",e=0,n=r.length;n>e;e++)if(r[e]){var i=a(r[e],"/");i&&(t=t+"/"+i)}return t},f=function(r){return r===e||null===r},c=function(t,e,n){if(f(t)||f(e)||f(n)||!Array.isArray(n))throw Error("Telepathic: Incorrect or missing parameters for _defineRoutes");if(o[t]&&o[t]!==e)throw Error("Telepathic: Cannot redfined a feature's namespace");o[t]=e;for(var i=0,a=n.length;a>i;i++)r.when(u([e,n[i].path]),n[i].route)},h=function(t){r.otherwise({redirectTo:t})},s=function(){return n?"":"#!"};return{html5Mode:function(r){n=r,t.html5Mode(r)},hashPrefix:function(r){i=r,t.hashPrefix(r)},$get:["$location",function(r){return{routes:function(r,t,e){return c(r,t,e),this},defaultRoute:function(r){return h(r),this},features:function(){return o},namespace:function(r){return o[r]},getPath:function(r,t){var e=o[r];if(!e)throw Error("Telepathic: invalid feature name: "+r);var n=[];if("string"==typeof t)n=t.split("/");else if(Array.isArray(t))for(var i=0,a=t.length;a>i;i++)n[i]=t[i]+"";return u([].concat(e,n))},path:function(t,e){return r.path(this.getPath(t,e)),r.path()},link:function(r,t){return s()+this.getPath(r,t)}}}]}}])}(window,window.angular);