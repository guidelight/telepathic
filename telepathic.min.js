!function(r,t,e){"use strict";var n=t.module("guidelight.telepathic",["ngRoute"]);n.provider("telepathic",["$routeProvider","$locationProvider",function(r,t){var n={},i=function(r,t){if(!r||!t)throw Error("can't trim an empty string");for(;"/"===r[0];)r=r.slice(1);for(;"/"===r.slice(-1);)r=r.slice(0,r.length-1);return r},o=function(r){if(!Array.isArray(r))throw Error("makePath only accepts arrays");for(var t="",e=0,n=r.length;n>e;e++)if(r[e]){var o=i(r[e],"/");o&&(t=t+"/"+o)}return t},a=function(r){return r===e||null===r},u=function(t,e,i){if(a(t)||a(e)||a(i)||!Array.isArray(i))throw Error("Telepathic: Incorrect or missing parameters for _defineRoutes");if(n[t]&&n[t]!==e)throw Error("Telepathic: Cannot redfined a feature's namespace");n[t]=e;for(var u=0,f=i.length;f>u;u++)r.when(o([e,i[u].path]),i[u].route)};return{html5Mode:function(r){t.html5Mode(r)},hashPrefix:function(r){t.hashPrefix(r)},$get:["$location",function(r){return{routes:function(r,t,e){return u(r,t,e),this},defaultRoute:function(r){return _setDefaultRoute(r),this},features:function(){return n},namespace:function(r){return n[r]},getPath:function(r,t){var e=n[r];if(!e)throw Error("Telepathic: invalid feature name: "+r);var i=[];if("string"==typeof t)i=t.split("/");else if(Array.isArray(t))for(var a=0,u=t.length;u>a;a++)i[a]=t[a]+"";return o([].concat(e,i))},path:function(t,e){return r.path(this.getPath(t,e)),r.path()}}}]}}])}(window,window.angular);